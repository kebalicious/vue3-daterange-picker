name: Publish to NPM

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test --if-present

    - name: Build package
      run: npm run build

    - name: Check if version changed
      id: check-version
      run: |
        if git diff HEAD~1 HEAD --name-only | grep -q "package.json"; then
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          git show HEAD~1:package.json > /tmp/old-package.json
          OLD_VERSION=$(node -p "require('/tmp/old-package.json').version")
          if [ "$CURRENT_VERSION" != "$OLD_VERSION" ]; then
            echo "version-changed=true" >> $GITHUB_OUTPUT
            echo "new-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version-changed=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "version-changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Publish to NPM
      if: steps.check-version.outputs.version-changed == 'true'
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create Git Tag
      if: steps.check-version.outputs.version-changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ steps.check-version.outputs.new-version }}" -m "Release v${{ steps.check-version.outputs.new-version }}"
        git push origin "v${{ steps.check-version.outputs.new-version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      if: steps.check-version.outputs.version-changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.check-version.outputs.new-version }}
        release_name: Release v${{ steps.check-version.outputs.new-version }}
        body: |
          ## Changes in v${{ steps.check-version.outputs.new-version }}
          
          Auto-generated release from package.json version update.
          
          ### Installation
          ```bash
          npm install @kebalicious/vue3-daterange-picker@${{ steps.check-version.outputs.new-version }}
          ```
        draft: false
        prerelease: false
